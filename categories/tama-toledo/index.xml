<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tama-Toledo on Tama-Toledo HAT - Hometown Action Team</title><link>/categories/tama-toledo/</link><description>Recent content in Tama-Toledo on Tama-Toledo HAT - Hometown Action Team</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 10 Dec 2021 17:33:29 -0600</lastBuildDate><atom:link href="/categories/tama-toledo/index.xml" rel="self" type="application/rss+xml"/><item><title>Tama-Toledo Program Overview</title><link>/tama-toledo-program-overview/</link><pubDate>Tue, 07 Dec 2021 22:33:29 -0600</pubDate><guid>/tama-toledo-program-overview/</guid><description>&lt;p>This is PAGE &lt;em>Tama-Toledo-Program-Overview.md&lt;/em>.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + 'pdfs\/01_TamaToledo_ProgramOverview-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama-Toledo: Program Overview (01)</title><link>/plan/tama-toledo-program-overview/</link><pubDate>Tue, 07 Dec 2021 22:33:29 -0600</pubDate><guid>/plan/tama-toledo-program-overview/</guid><description>&lt;p>This is PLAN &lt;em>Tama-Toledo-Program-Overview.md&lt;/em>.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/01_TamaToledo_ProgramOverview-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama-Toledo: Concept Overview (8a)</title><link>/plan/tama-toledo-concept-overview/</link><pubDate>Fri, 10 Dec 2021 17:33:29 -0600</pubDate><guid>/plan/tama-toledo-concept-overview/</guid><description>&lt;p>This is the overall concept plan for Tama-Toledo split into eight pages. The first page includes some comments about the overall plan along with a legend of specific project highlights. Those highlights appear on maps of Toledo (page 2) and Tama (page 3). A small overlap of Toledo into Tama, and vis-versa is provided for reference and alignment.&lt;/p>
&lt;p>The remaining pages include:&lt;/p>
&lt;ul>
&lt;li>Page 4: A summary of trail/sidewalk segments &lt;em>A&lt;/em> through &lt;em>N&lt;/em> with total estimated costs.&lt;/li>
&lt;li>Page 5: Estimated cost details for segments &lt;em>B&lt;/em>, &lt;em>C&lt;/em>, &lt;em>E&lt;/em>, and &lt;em>F&lt;/em>.&lt;/li>
&lt;li>Page 6: Estimated cost details for segments &lt;em>F&lt;/em> (repeated), &lt;em>G&lt;/em>, &lt;em>H&lt;/em>, and &lt;em>I&lt;/em>.&lt;/li>
&lt;li>Page 7: Estimated cost details for segments &lt;em>J&lt;/em>, &lt;em>K&lt;/em>, &lt;em>L&lt;/em>, and &lt;em>M&lt;/em>.&lt;/li>
&lt;li>Page 8: Estimated cost details for segment &lt;em>N&lt;/em> (not labeled), the estimated grand total, and notes.&lt;/li>
&lt;/ul>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/08a-ConceptOverview-Binder2.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Test-PDF</title><link>/plan/test-pdf/</link><pubDate>Tue, 07 Dec 2021 21:32:02 -0600</pubDate><guid>/plan/test-pdf/</guid><description>&lt;p>This is PLAN &lt;em>Test-PDF.md&lt;/em>. This &amp;ldquo;test&amp;rdquo; example shows how the original PDFs created for this project are difficult to read when rendered for the web.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/01_TamaToledo_ProgramOverview.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item></channel></rss>