<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Plans on Tama-Toledo HAT - Hometown Action Team</title><link>/plan/</link><description>Recent content in Plans on Tama-Toledo HAT - Hometown Action Team</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 22 Dec 2021 08:55:29 -0600</lastBuildDate><atom:link href="/plan/index.xml" rel="self" type="application/rss+xml"/><item><title>Tama-Toledo: Program Overview (01)</title><link>/plan/tama-toledo-program-overview/</link><pubDate>Tue, 07 Dec 2021 22:33:29 -0600</pubDate><guid>/plan/tama-toledo-program-overview/</guid><description>&lt;p>This is PLAN &lt;em>Tama-Toledo-Program-Overview.md&lt;/em>.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/01_TamaToledo_ProgramOverview-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama-Toledo: Concept Overview (8a)</title><link>/plan/tama-toledo-concept-overview/</link><pubDate>Fri, 10 Dec 2021 17:33:29 -0600</pubDate><guid>/plan/tama-toledo-concept-overview/</guid><description>&lt;p>This is the overall concept plan for Tama-Toledo split into eight pages. The first page includes some comments about the overall plan along with a legend of specific project highlights. Those highlights appear on maps of Toledo (page 2) and Tama (page 3). A small overlap of Toledo into Tama, and vis-versa is provided for reference and alignment.&lt;/p>
&lt;p>The remaining pages include:&lt;/p>
&lt;ul>
&lt;li>Page 4: A summary of trail/sidewalk segments &lt;em>A&lt;/em> through &lt;em>N&lt;/em> with total estimated costs.&lt;/li>
&lt;li>Page 5: Estimated cost details for segments &lt;em>B&lt;/em>, &lt;em>C&lt;/em>, &lt;em>E&lt;/em>, and &lt;em>F&lt;/em>.&lt;/li>
&lt;li>Page 6: Estimated cost details for segments &lt;em>F&lt;/em> (repeated), &lt;em>G&lt;/em>, &lt;em>H&lt;/em>, and &lt;em>I&lt;/em>.&lt;/li>
&lt;li>Page 7: Estimated cost details for segments &lt;em>J&lt;/em>, &lt;em>K&lt;/em>, &lt;em>L&lt;/em>, and &lt;em>M&lt;/em>.&lt;/li>
&lt;li>Page 8: Estimated cost details for segment &lt;em>N&lt;/em> (not labeled), the estimated grand total, and notes.&lt;/li>
&lt;/ul>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/08a-ConceptOverview-Binder2.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama: Downtown (9a)</title><link>/plan/tama-downtown/</link><pubDate>Tue, 21 Dec 2021 18:59:29 -0600</pubDate><guid>/plan/tama-downtown/</guid><description>&lt;p>This plan, &lt;strong>9a&lt;/strong>, presents one &lt;a href="http://tacticalurbanismguide.com/about/" target="_blank" rel="noopener noreferrer">
Tactical Urbanism
&amp;nbsp;&lt;i class="fas fa-external-link-alt">&lt;/i>

&lt;/a> option (page 2) and a more complex/expensive permanent streetscape option (page 3) for renovating downtown Tama.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/09a-Downtown-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama: State Street at US 63 (9b)</title><link>/plan/tama-state-street-and-us-63/</link><pubDate>Tue, 21 Dec 2021 19:59:29 -0600</pubDate><guid>/plan/tama-state-street-and-us-63/</guid><description>&lt;p>This plan, &lt;strong>9b&lt;/strong>, presents a &lt;a href="http://tacticalurbanismguide.com/about/" target="_blank" rel="noopener noreferrer">
Tactical Urbanism
&amp;nbsp;&lt;i class="fas fa-external-link-alt">&lt;/i>

&lt;/a> option (page 2) and a more complex/expensive permanent streetscape option (page 3) for safety improvements at the State Street / US 63 intersection in Tama.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/9b_StateSt_US63-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama: Harding Street at US 63 (9c)</title><link>/plan/tama-harding-and-us-63/</link><pubDate>Tue, 21 Dec 2021 20:29:29 -0600</pubDate><guid>/plan/tama-harding-and-us-63/</guid><description>&lt;p>This plan, &lt;strong>9c&lt;/strong>, presents a &lt;a href="http://tacticalurbanismguide.com/about/" target="_blank" rel="noopener noreferrer">
Tactical Urbanism
&amp;nbsp;&lt;i class="fas fa-external-link-alt">&lt;/i>

&lt;/a> option (page 2) and a more complex/expensive permanent streetscape option (page 3) for safety improvements at the Harding Street / US 63 intersection in Tama.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/9c_HardingSt_US63-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Tama-Toledo: 17th Street at US 63 (9d)</title><link>/plan/tama-toledo-17th-street-at-us-63/</link><pubDate>Fri, 10 Dec 2021 08:33:29 -0600</pubDate><guid>/plan/tama-toledo-17th-street-at-us-63/</guid><description>&lt;p>This plan, &lt;strong>9d&lt;/strong>, designated for participation by both communities, includes a pedestrian crossing of busy US 63 at 17th Street in Tama, and sidewalk access along US 63 and 17th Street connecting the STC campus to northern portions of Tama&amp;rsquo;s sidewalk network, Tama&amp;rsquo;s Oak Park, southern portions of Toledo&amp;rsquo;s sidewalk network, and the STC Administration Building.&lt;/p>
&lt;p>Two solution options were proposed at this location:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>The first option, a &lt;a href="http://tacticalurbanismguide.com/about/" target="_blank" rel="noopener noreferrer">
Tactical Urbanism
&amp;nbsp;&lt;i class="fas fa-external-link-alt">&lt;/i>

&lt;/a> approach, calls for an at-grade crossing of US 63 from the NE corner of the intersection to join with the existing sidewalk on the west side of US 63. The estimated cost of this solution appears on page 5 of the attached PDF.&lt;/p></description></item><item><title>Tama-Toledo: Broadway at Business 30 (10a)</title><link>/plan/tama-toledo-broadway-at-lincoln-hwy/</link><pubDate>Thu, 09 Dec 2021 12:33:29 -0600</pubDate><guid>/plan/tama-toledo-broadway-at-lincoln-hwy/</guid><description>&lt;p>This is &lt;em>Tama-Toledo-Broadway-at-Lincoln-Hwy.md&lt;/em>, one of two crosswalk projects from the 2021 Community Visioning work that were tagged for combined effort from Tama and Toledo. A corresponding pair of initial cost estimates are included. &lt;strong>Please note that math errors were found in some project totals within the original estimates. The original PDF documents are very difficult to edit so corrected totals are shown only in the table&lt;sup>1&lt;/sup> at the end of this section.&lt;/strong>&lt;/p></description></item><item><title>Toledo: Connection Plan (10b)</title><link>/plan/toledo-connection-plan/</link><pubDate>Fri, 10 Dec 2021 08:59:29 -0600</pubDate><guid>/plan/toledo-connection-plan/</guid><description>&lt;p>This plan, &lt;strong>10b&lt;/strong>, is an overall pedestrian connection plan for Toledo.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/10b_ConnectionPlan-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Toledo: 2nd Street at US 63 (10c)</title><link>/plan/toledo-2nd-street-at-us-63/</link><pubDate>Wed, 08 Dec 2021 12:33:29 -0600</pubDate><guid>/plan/toledo-2nd-street-at-us-63/</guid><description>&lt;p>This is PLAN &lt;em>Toledo-2nd-Street-at-US-63.md&lt;/em>.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/10c_2ndSt_US-63-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Toledo: High Street at US 63 (10d)</title><link>/plan/toledo-high-street-at-us-63/</link><pubDate>Wed, 22 Dec 2021 08:51:29 -0600</pubDate><guid>/plan/toledo-high-street-at-us-63/</guid><description>&lt;p>This plan, &lt;strong>10d&lt;/strong>, presents a &lt;a href="http://tacticalurbanismguide.com/about/" target="_blank" rel="noopener noreferrer">
Tactical Urbanism
&amp;nbsp;&lt;i class="fas fa-external-link-alt">&lt;/i>

&lt;/a> option (page 2) and a more complex/expensive permanent streetscape option (page 3) for safety improvements at the High Street / US 63 intersection in Toledo.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/10d_HighSt_US63-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Toledo: Downtown (10e)</title><link>/plan/toledo-downtown/</link><pubDate>Wed, 22 Dec 2021 08:55:29 -0600</pubDate><guid>/plan/toledo-downtown/</guid><description>&lt;p>This plan, &lt;strong>10e&lt;/strong>, presents a &lt;a href="http://tacticalurbanismguide.com/about/" target="_blank" rel="noopener noreferrer">
Tactical Urbanism
&amp;nbsp;&lt;i class="fas fa-external-link-alt">&lt;/i>

&lt;/a> option (page 2) and a more complex/expensive permanent streetscape option (page 3) for renovation of Downtown Toledo.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/10e_DowntownToledo-Binder.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item><item><title>Test-PDF</title><link>/plan/test-pdf/</link><pubDate>Tue, 07 Dec 2021 21:32:02 -0600</pubDate><guid>/plan/test-pdf/</guid><description>&lt;p>This is PLAN &lt;em>Test-PDF.md&lt;/em>. This &amp;ldquo;test&amp;rdquo; example shows how the original PDFs created for this project are difficult to read when rendered for the web.&lt;/p>


&lt;script type="text/javascript" src= '//js/pdf-js/build/pdf.js'>&lt;/script>
&lt;style>
#the-canvas {
 border: 1px solid black;
 direction: ltr;
 width: 100%;
 height: auto;
 display: none;
}

#paginator {
 display: none;
 text-align: center;
 margin-bottom: 10px;
}

#loadingWrapper {
 display: none;
 justify-content: center;
 align-items: center;
 width: 100%;
 height: 350px;
}

#loading {
 display: inline-block;
 width: 50px;
 height: 50px;
 border: 3px solid #d2d0d0;;
 border-radius: 50%;
 border-top-color: #383838;
 animation: spin 1s ease-in-out infinite;
 -webkit-animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
@-webkit-keyframes spin {
 to { -webkit-transform: rotate(360deg); }
}
&lt;/style>

&lt;div id="paginator">
 &lt;button id="prev">Previous&lt;/button>
 &lt;button id="next">Next&lt;/button>
 &amp;nbsp; &amp;nbsp;
 &lt;span>Page: &lt;span id="page_num">&lt;/span> / &lt;span id="page_count">&lt;/span>&lt;/span>
&lt;/div>
&lt;div id="embed-pdf-container">
 &lt;div id="loadingWrapper">
 &lt;div id="loading">&lt;/div>
 &lt;/div>
 &lt;canvas id="the-canvas">&lt;/canvas>
&lt;/div>

&lt;script type="text/javascript">
window.onload = function() {


var url = "\/" + '..\/..\/pdfs\/01_TamaToledo_ProgramOverview.pdf';

var hidePaginator = "" === "true";
var hideLoader = "" === "true";
var selectedPageNum = parseInt("") || 1;


var pdfjsLib = window['pdfjs-dist/build/pdf'];


pdfjsLib.GlobalWorkerOptions.workerSrc = "\/" + '/js/pdf-js/build/pdf.worker.js';


var pdfDoc = null,
 pageNum = selectedPageNum,
 pageRendering = false,
 pageNumPending = null,
 scale = 3,
 canvas = document.getElementById('the-canvas'),
 ctx = canvas.getContext('2d'),
 paginator = document.getElementById("paginator"),
 loadingWrapper = document.getElementById('loadingWrapper');



showPaginator();
showLoader();



function renderPage(num) {
 pageRendering = true;
 
 pdfDoc.getPage(num).then(function(page) {
 var viewport = page.getViewport({scale: scale});
 canvas.height = viewport.height;
 canvas.width = viewport.width;

 
 var renderContext = {
 canvasContext: ctx,
 viewport: viewport
 };
 var renderTask = page.render(renderContext);

 
 renderTask.promise.then(function() {
 pageRendering = false;
 showContent();
 
 if (pageNumPending !== null) {
 
 renderPage(pageNumPending);
 pageNumPending = null;
 }
 });
 });

 
 document.getElementById('page_num').textContent = num;
}



function showContent() {
 loadingWrapper.style.display = 'none';
 canvas.style.display = 'block';
}



function showLoader() {
 if (hideLoader) return
 loadingWrapper.style.display = 'flex';
 canvas.style.display = 'none';
}



function showPaginator() {
 if(hidePaginator) return
 paginator.style.display = 'block';
}



function queueRenderPage(num) {
 if (pageRendering) {
 pageNumPending = num;
 } else {
 renderPage(num);
 }
}



function onPrevPage() {
 if (pageNum &lt;= 1) {
 return;
 }
 pageNum--;
 queueRenderPage(pageNum);
}
document.getElementById('prev').addEventListener('click', onPrevPage);



function onNextPage() {
 if (pageNum >= pdfDoc.numPages) {
 return;
 }
 pageNum++;
 queueRenderPage(pageNum);
}
document.getElementById('next').addEventListener('click', onNextPage);



pdfjsLib.getDocument(url).promise.then(function(pdfDoc_) {
 pdfDoc = pdfDoc_;
 var numPages = pdfDoc.numPages;
 document.getElementById('page_count').textContent = numPages;
 
 
 if (pageNum > numPages) {
 pageNum = numPages
 }

 
 renderPage(pageNum);
});
}

&lt;/script></description></item></channel></rss>